/* =============================================================================
   Data Validation Checks: Gold Layer
   =============================================================================
   Script Purpose:
       These validation queries ensure data integrity and consistency 
       across Silver and Gold layers after transformation.
       The checks include:
           - Duplicate ID detection
           - Gender resolution validation
           - Product uniqueness verification
           - Foreign key consistency across fact and dimension tables
   ============================================================================= */
   
-- 1. Duplicate Check: Customers
--    Ensures each customer (cst_id) is unique across the integrated dataset.
SELECT cst_id, COUNT(*)
FROM (
	SELECT
		ci.cst_id,
		ci.cst_key,
		ci.cst_firstname,
		ci.cst_lastname,
		ci.cst_marital_status,
		ci.cst_gndr,
		ci.cst_create_date,
		ca.bdate,
		ca.gen,
		la.cntry
	FROM silver.crm_cust_info ci
	LEFT JOIN silver.erp_cust_az12 ca
		ON ci.cst_key = ca.cid
	LEFT JOIN silver.erp_loc_a101 la
		ON ci.cst_key = la.cid
) t
GROUP BY cst_id
HAVING COUNT(*) > 1;

-- 2. Gender Mapping Validation
--    Verifies that gender resolution logic between CRM and ERP data sources 
--    is working as intended.
--    CRM acts as the master source for gender.
SELECT
	ci.cst_gndr,
	ca.gen,
	CASE 
		WHEN ci.cst_gndr != 'n/a' THEN ci.cst_gndr     -- CRM is the master for gender integration
		ELSE COALESCE(ca.gen, 'n/a')                   -- Fallback to ERP if missing in CRM
	END AS new_gndr
FROM silver.crm_cust_info ci
LEFT JOIN silver.erp_cust_az12 ca
	ON ci.cst_key = ca.cid;

-- 3. Duplicate Check: Products
--    Ensures that each product key (prd_key) is unique in the active product set.
SELECT prd_key, COUNT(*)
FROM (
	SELECT
		pn.prd_id,
		pn.cat_id,
		pn.prd_key,
		pn.prd_nm,
		pn.prd_cost,
		pn.prd_line,
		pn.prd_start_dt,
		pc.cat,
		pc.cubcat,
		pc.maintenance
	FROM silver.crm_prd_info pn
	LEFT JOIN silver.erp_px_cat_g1v2 pc
		ON pn.cat_id = pc.id
	WHERE prd_end_dt IS NULL  -- Filter out historical data
) t
GROUP BY prd_key
HAVING COUNT(*) > 1;

-- 4. Foreign Key Integrity Check: Customers
--    Ensures that every customer referenced in the Fact table exists 
--    in the Customer Dimension table.
SELECT *
FROM gold.fact_sales fs
LEFT JOIN gold.dim_customers dc
	ON fs.customer_key = dc.customer_key
WHERE dc.customer_key IS NULL;

-- 5. Foreign Key Integrity Check: Products
--    Ensures that every product referenced in the Fact table exists 
--    in the Product Dimension table.
SELECT *
FROM gold.fact_sales fs
LEFT JOIN gold.dim_products dp
	ON fs.product_key = dp.product_key
WHERE dp.product_key IS NULL;
